# загружаем переменные
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage

from data import config

#
# инстанс класса бот с помощью которого мы будем делать все
# запросы к телеге по тем методам которые он предлагает
# каждый метод асинхронный - выдает карунтину)
# просто так метод для асинхронного вызова нельзя написать его
# нужно ставить в поток
# например from asyncio import get_event_loop
# получаем поток
# loop = get_event_loop()
# но тк поток и так создается в диспатчере сделаем еще проще
# dp.loop.run_util_complete(bot.send_message(args...))
# тогда не нужно делать await оно само принимает карутины и выполняет их
#
bot = Bot(token=config.BOT_TOKEN, parse_mode=types.ParseMode.HTML)
#

#
#
# хранит какието данные в машине состояний)
# без стайтов в принципе не нужна
# но на всякий оставллю
#
storage = MemoryStorage() # оперативная память
#

#
# главный обработчик наших апдейтов куда летят все апдейты
# которые проходят через наши фильтры  мидлевари
# после чего попадая в наши хендлеры
# где мы уже настраиваем логику ответов на эти сообщения
#
dp = Dispatcher(bot, storage=storage)
#
# Бонус: имея только диспатчер
# мы имеем доступ г боту лооп и сторадж
# dp.loop
# dp.bot
# dp.storage
# все в нем зашито
#




